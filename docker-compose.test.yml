version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - APP_ENV=test
      - NODE_ENV=test
      - DEBUG=false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME_TEST:-${DB_NAME}_test}
    ports:
      - '${DB_PORT_TEST:-5433}:5432'
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME_TEST:-${DB_NAME}_test}']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - '${REDIS_PORT_TEST:-6380}:6379'
    volumes:
      - redis-test-data:/data
    networks:
      - app-network
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres-test-data:
  redis-test-data:

networks:
  app-network:
    driver: bridge
